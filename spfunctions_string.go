// Code generated by "stringer -type=SPFunctions"; DO NOT EDIT.

package solpos

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NonFunction-1]
	_ = x[LDoy-2]
	_ = x[LGeom-4]
	_ = x[LZenetr-8]
	_ = x[LSsha-16]
	_ = x[LSbcf-32]
	_ = x[LTst-64]
	_ = x[LSrss-128]
	_ = x[LSolazm-256]
	_ = x[LRefrac-512]
	_ = x[LAmass-1024]
	_ = x[LPrime-2048]
	_ = x[LTilt-4096]
	_ = x[LEtr-8192]
}

const _SPFunctions_name = "NonFunctionLDoyLGeomLZenetrLSshaLSbcfLTstLSrssLSolazmLRefracLAmassLPrimeLTiltLEtr"

var _SPFunctions_map = map[SPFunctions]string{
	1:    _SPFunctions_name[0:11],
	2:    _SPFunctions_name[11:15],
	4:    _SPFunctions_name[15:20],
	8:    _SPFunctions_name[20:27],
	16:   _SPFunctions_name[27:32],
	32:   _SPFunctions_name[32:37],
	64:   _SPFunctions_name[37:41],
	128:  _SPFunctions_name[41:46],
	256:  _SPFunctions_name[46:53],
	512:  _SPFunctions_name[53:60],
	1024: _SPFunctions_name[60:66],
	2048: _SPFunctions_name[66:72],
	4096: _SPFunctions_name[72:77],
	8192: _SPFunctions_name[77:81],
}

func (i SPFunctions) String() string {
	if str, ok := _SPFunctions_map[i]; ok {
		return str
	}
	return "SPFunctions(" + strconv.FormatInt(int64(i), 10) + ")"
}
